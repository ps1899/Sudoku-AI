// larger big O runtime but less memory used

public boolean solve (Array board) {
   
    if (violation occurs) {
        return false;    
    }
    if (board is filled) {
        return true;
    }
    
    
    for (int i = 1; i < 10; i++) {
        allowedPossibilities = getCellsWithAllowedPossibilies(i, board)
        
        foreach (cell : allowedPossibilities) { 
            foreach (possibility : cell) {  
                place possibiliity as value at cell location of board
                remarkTheBoard(cell.location, board);
                if (solve(board)) {
                    return true;                
                }
                else {
                    unmark(board(cell.location));
                    remove possibility as value at cell location of board                
                }    
            }
        }
    }
}
